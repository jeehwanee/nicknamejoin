/*
 * Generated by the Jasper component of Apache Tomcat
 * Version: Apache Tomcat/8.5.65
 * Generated at: 2021-04-25 06:58:07 UTC
 * Note: The last modified time of this file was set to
 *       the last modified time of the source file after
 *       generation to assist with modification tracking.
 */
package org.apache.jsp.WEB_002dINF.views.member;

import javax.servlet.*;
import javax.servlet.http.*;
import javax.servlet.jsp.*;

public final class join_jsp extends org.apache.jasper.runtime.HttpJspBase
    implements org.apache.jasper.runtime.JspSourceDependent,
                 org.apache.jasper.runtime.JspSourceImports {

  private static final javax.servlet.jsp.JspFactory _jspxFactory =
          javax.servlet.jsp.JspFactory.getDefaultFactory();

  private static java.util.Map<java.lang.String,java.lang.Long> _jspx_dependants;

  private static final java.util.Set<java.lang.String> _jspx_imports_packages;

  private static final java.util.Set<java.lang.String> _jspx_imports_classes;

  static {
    _jspx_imports_packages = new java.util.HashSet<>();
    _jspx_imports_packages.add("javax.servlet");
    _jspx_imports_packages.add("javax.servlet.http");
    _jspx_imports_packages.add("javax.servlet.jsp");
    _jspx_imports_classes = null;
  }

  private volatile javax.el.ExpressionFactory _el_expressionfactory;
  private volatile org.apache.tomcat.InstanceManager _jsp_instancemanager;

  public java.util.Map<java.lang.String,java.lang.Long> getDependants() {
    return _jspx_dependants;
  }

  public java.util.Set<java.lang.String> getPackageImports() {
    return _jspx_imports_packages;
  }

  public java.util.Set<java.lang.String> getClassImports() {
    return _jspx_imports_classes;
  }

  public javax.el.ExpressionFactory _jsp_getExpressionFactory() {
    if (_el_expressionfactory == null) {
      synchronized (this) {
        if (_el_expressionfactory == null) {
          _el_expressionfactory = _jspxFactory.getJspApplicationContext(getServletConfig().getServletContext()).getExpressionFactory();
        }
      }
    }
    return _el_expressionfactory;
  }

  public org.apache.tomcat.InstanceManager _jsp_getInstanceManager() {
    if (_jsp_instancemanager == null) {
      synchronized (this) {
        if (_jsp_instancemanager == null) {
          _jsp_instancemanager = org.apache.jasper.runtime.InstanceManagerFactory.getInstanceManager(getServletConfig());
        }
      }
    }
    return _jsp_instancemanager;
  }

  public void _jspInit() {
  }

  public void _jspDestroy() {
  }

  public void _jspService(final javax.servlet.http.HttpServletRequest request, final javax.servlet.http.HttpServletResponse response)
      throws java.io.IOException, javax.servlet.ServletException {

    final java.lang.String _jspx_method = request.getMethod();
    if (!"GET".equals(_jspx_method) && !"POST".equals(_jspx_method) && !"HEAD".equals(_jspx_method) && !javax.servlet.DispatcherType.ERROR.equals(request.getDispatcherType())) {
      response.sendError(HttpServletResponse.SC_METHOD_NOT_ALLOWED, "JSP들은 오직 GET, POST 또는 HEAD 메소드만을 허용합니다. Jasper는 OPTIONS 메소드 또한 허용합니다.");
      return;
    }

    final javax.servlet.jsp.PageContext pageContext;
    javax.servlet.http.HttpSession session = null;
    final javax.servlet.ServletContext application;
    final javax.servlet.ServletConfig config;
    javax.servlet.jsp.JspWriter out = null;
    final java.lang.Object page = this;
    javax.servlet.jsp.JspWriter _jspx_out = null;
    javax.servlet.jsp.PageContext _jspx_page_context = null;


    try {
      response.setContentType("text/html; charset=UTF-8");
      pageContext = _jspxFactory.getPageContext(this, request, response,
      			null, true, 8192, true);
      _jspx_page_context = pageContext;
      application = pageContext.getServletContext();
      config = pageContext.getServletConfig();
      session = pageContext.getSession();
      out = pageContext.getOut();
      _jspx_out = out;

      out.write("\r\n");
      out.write("<!DOCTYPE html>\r\n");
      out.write("<html>\r\n");
      out.write("<head>\r\n");
      out.write("<meta charset=\"UTF-8\">\r\n");
      out.write("<title>Insert title here</title>\r\n");
      out.write("<link rel=\"stylesheet\" href=\"/resources/css/member/join.css\">\r\n");
      out.write("<script\r\n");
      out.write("  src=\"https://code.jquery.com/jquery-3.4.1.js\"\r\n");
      out.write("  integrity=\"sha256-WpOohJOqMqqyKL9FccASB9O0KwACQJpFTUBLTYOVvVU=\"\r\n");
      out.write("  crossorigin=\"anonymous\"></script>\r\n");
      out.write("</head>\r\n");
      out.write("<body>\r\n");
      out.write("\r\n");
      out.write("<div class=\"wrapper\">\r\n");
      out.write("\t<form id=\"join_form\" method=\"post\">\r\n");
      out.write("\t<div class=\"wrap\">\r\n");
      out.write("\t\t\t<div class=\"subjecet\">\r\n");
      out.write("\t\t\t\t<span>회원가입</span>\r\n");
      out.write("\t\t\t</div>\r\n");
      out.write("\t\t\t<div class=\"id_wrap\">\r\n");
      out.write("\t\t\t\t<div class=\"id_name\">아이디</div>\r\n");
      out.write("\t\t\t\t<div class=\"id_input_box\">\r\n");
      out.write("\t\t\t\t\t<input class=\"id_input\" name=\"memberId\">\r\n");
      out.write("\t\t\t\t</div>\r\n");
      out.write("\t\t\t\t<span class=\"id_input_re_1\">사용 가능한 아이디입니다.</span>\r\n");
      out.write("\t\t\t\t<span class=\"id_input_re_2\">해당 아이디가 이미 존재합니다.</span>\r\n");
      out.write("\t\t\t\t<span class=\"final_id_ck\" style = \"color:red\">아이디를 입력해주세요.</span>\r\n");
      out.write("\t\t\t</div>\r\n");
      out.write("\t\t\t<div class=\"nick_wrap\">\r\n");
      out.write("\t\t\t\t<div class=\"nick_name\">닉네임</div>\r\n");
      out.write("\t\t\t\t<div class=\"nick_input_box\">\r\n");
      out.write("\t\t\t\t\t<input class=\"nick_input\" name=\"memberNick\" type=\"text\" maxlength=\"6\">\r\n");
      out.write("\t\t\t\t</div>\r\n");
      out.write("\t\t\t\t<span class=\"nick_input_re_1\">사용 가능한 닉네임입니다.</span>\r\n");
      out.write("\t\t\t\t<span class=\"nick_input_re_2\">해당 닉네임이 이미 존재합니다.</span>\r\n");
      out.write("\t\t\t\t<span class=\"final_nick_ck\" style = \"color:red\">닉네임을 입력해주세요.</span>\r\n");
      out.write("\t\t\t</div>\r\n");
      out.write("\t\t\t\r\n");
      out.write("\t\t\t<div class=\"pw_wrap\">\r\n");
      out.write("\t\t\t\t<div class=\"pw_name\">비밀번호</div>\r\n");
      out.write("\t\t\t\t<div class=\"pw_input_box\">\r\n");
      out.write("\t\t\t\t\t<input type=\"password\" class=\"pw_input\" name=\"memberPw\">\r\n");
      out.write("\t\t\t\t</div>\r\n");
      out.write("\t\t\t\t<span>※비밀번호는 영문+숫자+특수문자를 포함한 8자리 이상이어야 합니다.</span>\r\n");
      out.write("\t\t\t\t<span class=\"final_pw_ck\" style = \"color:red\">비밀번호를 입력해주세요.</span>\r\n");
      out.write("\t\t\t\t<sapn class=\"pw_input_box_warn\" style = \"font-weight: bold; color:red\"></sapn>\r\n");
      out.write("\t\t\t</div>\r\n");
      out.write("\t\t\t<div class=\"pwck_wrap\">\r\n");
      out.write("\t\t\t\t<div class=\"pwck_name\">비밀번호 확인</div>\r\n");
      out.write("\t\t\t\t<div class=\"pwck_input_box\">\r\n");
      out.write("\t\t\t\t\t<input type=\"password\" class=\"pwck_input\">\r\n");
      out.write("\t\t\t\t</div>\r\n");
      out.write("\t\t\t\t<span class=\"final_pwck_ck\" style = \"color:red\">비밀번호 확인을 입력해주세요.</span>\r\n");
      out.write("\t\t\t\t<span class=\"pwck_input_re_1\">비밀번호가 일치합니다.</span>\r\n");
      out.write("\t\t\t\t<span class=\"pwck_input_re_2\">비밀번호가 일치하지 않습니다.</span>\r\n");
      out.write("\t\t\t</div>\r\n");
      out.write("\t\t\t<div class=\"user_wrap\">\r\n");
      out.write("\t\t\t\t<div class=\"user_name\">이름</div>\r\n");
      out.write("\t\t\t\t<div class=\"user_input_box\">\r\n");
      out.write("\t\t\t\t\t<input class=\"user_input\" name=\"memberName\">\r\n");
      out.write("\t\t\t\t</div>\r\n");
      out.write("\t\t\t\t<span class=\"final_name_ck\" style = \"color:red\">이름을 입력해주세요.</span>\r\n");
      out.write("\t\t\t</div>\r\n");
      out.write("\t\t\t<div class=\"mail_wrap\">\r\n");
      out.write("\t\t\t\t<div class=\"mail_name\">이메일</div> \r\n");
      out.write("\t\t\t\t<div class=\"mail_input_box\">\r\n");
      out.write("\t\t\t\t\t<input class=\"mail_input\" name=\"memberMail\">\r\n");
      out.write("\t\t\t\t</div>\r\n");
      out.write("\t\t\t\t<span class=\"mail_input_re_1\">사용가능한 이메일입니다.</span><br>\r\n");
      out.write("\t\t\t\t<span class=\"mail_input_re_2\">해당 이메일이 이미 존재합니다.</span><br>\r\n");
      out.write("\t\t\t\t<span class=\"final_mail_ck\" style = \"color:red\">이메일을 입력해주세요.</span>\r\n");
      out.write("\t\t\t\t<sapn class=\"mail_input_box_warn\" style = \"color:red\"></sapn>\r\n");
      out.write("\t\t\t\t<div class=\"mail_check_wrap\">\r\n");
      out.write("\t\t\t\t\t<div class=\"mail_check_input_box\" id=\"mail_check_input_box_false\">\r\n");
      out.write("\t\t\t\t\t\t<input class=\"mail_check_input\" disabled=\"disabled\">\r\n");
      out.write("\t\t\t\t\t</div>\r\n");
      out.write("\t\t\t\t\t<div class=\"mail_check_button\">\r\n");
      out.write("\t\t\t\t\t\t<span>인증번호 전송</span>\r\n");
      out.write("\t\t\t\t\t</div>\r\n");
      out.write("\t\t\t\t\t<div class=\"clearfix\"></div>\r\n");
      out.write("\t\t\t\t\t<span id=\"mail_check_input_box_warn\"></span>\r\n");
      out.write("\t\t\t\t</div>\r\n");
      out.write("\t\t\t</div>\r\n");
      out.write("\t\t\t<div class=\"address_wrap\">\r\n");
      out.write("\t\t\t\t<div class=\"address_name\">주소</div>\r\n");
      out.write("\t\t\t\t<div class=\"address_input_1_wrap\">\r\n");
      out.write("\t\t\t\t\t<div class=\"address_input_1_box\">\r\n");
      out.write("\t\t\t\t\t\t<input class=\"address_input_1\" name=\"memberAddr1\" readonly=\"readonly\">\r\n");
      out.write("\t\t\t\t\t</div>\r\n");
      out.write("\t\t\t\t\t<div class=\"address_button\" onclick=\"execution_daum_address()\">\r\n");
      out.write("\t\t\t\t\t\t<span>주소 찾기</span>\r\n");
      out.write("\t\t\t\t\t</div>\r\n");
      out.write("\t\t\t\t\t<div class=\"clearfix\"></div>\r\n");
      out.write("\t\t\t\t</div>\r\n");
      out.write("\t\t\t\t<div class =\"address_input_2_wrap\">\r\n");
      out.write("\t\t\t\t\t<div class=\"address_input_2_box\">\r\n");
      out.write("\t\t\t\t\t\t<input class=\"address_input_2\" name=\"memberAddr2\" readonly=\"readonly\">\r\n");
      out.write("\t\t\t\t\t</div>\r\n");
      out.write("\t\t\t\t</div>\r\n");
      out.write("\t\t\t\t<div class =\"address_input_3_wrap\">\r\n");
      out.write("\t\t\t\t\t<div class=\"address_input_3_box\">\r\n");
      out.write("\t\t\t\t\t\t<input class=\"address_input_3\" name=\"memberAddr3\" readonly=\"readonly\">\r\n");
      out.write("\t\t\t\t\t</div>\r\n");
      out.write("\t\t\t\t</div>\r\n");
      out.write("\t\t\t\t<span class=\"final_addr_ck\" style = \"color:red\">주소를 입력해주세요.</span>\r\n");
      out.write("\t\t\t</div>\r\n");
      out.write("\t\t\t<div class=\"join_button_wrap\">\r\n");
      out.write("\t\t\t\t<input type=\"button\" class=\"join_button\" value=\"가입하기\">\r\n");
      out.write("\t\t\t</div>\r\n");
      out.write("\t\t</div>\r\n");
      out.write("\t</form>\r\n");
      out.write("</div>\r\n");
      out.write("\r\n");
      out.write("<!-- 주소록 API 외부 스크립트 파일 연결 코드 추가-->\r\n");
      out.write("<script src=\"https://t1.daumcdn.net/mapjsapi/bundle/postcode/prod/postcode.v2.js\"></script>\r\n");
      out.write("\r\n");
      out.write("<!-- \r\n");
      out.write("회원가입 클릭 시 회원가입 기능이 작동하도록 jquery코드 추가\r\n");
      out.write("84번째 줄의 \"가입하기\"버튼 <input type=\"button\" class=\"join_button\" value=\"가입하기\"> 클릭 시 \r\n");
      out.write("form태그의 속성 action이 추가되고(url경로), form태그가 서버에 제출이 된다는 의미. 제출방식은 form태그의 POST형식\r\n");
      out.write(" -->\r\n");
      out.write("<script>\r\n");
      out.write("\r\n");
      out.write("var code = \"\"; //Controller(MemberController.java의 mailCheckGET()메소드)로부터 전달받은 인증번호 저장\r\n");
      out.write("/*\r\n");
      out.write(" * 회원가입 유효성 검사 통과유무 변수\r\n");
      out.write(" */\r\n");
      out.write("var idCheck = false;\r\n");
      out.write("var idckCheck = false;\r\n");
      out.write("var nickCheck = false;\r\n");
      out.write("var nickckCheck = false;\r\n");
      out.write("var pwCheck = false;\r\n");
      out.write("var pwckCheck = false;\r\n");
      out.write("var pwckcorCheck = false;\r\n");
      out.write("var nameCheck = false;\r\n");
      out.write("var mailCheck = false;\r\n");
      out.write("var mailckCheck = false;\r\n");
      out.write("var mailnumCheck = false;\r\n");
      out.write("var addressCheck = false\r\n");
      out.write("$(document).ready(function(){\r\n");
      out.write("\t//회원가입 버튼(회원가입 기능 작동)\r\n");
      out.write("\t$(\".join_button\").click(function(){\r\n");
      out.write("\t\t//입력값 변수\r\n");
      out.write("\t\tvar id = $('.id_input').val();\r\n");
      out.write("\t\tvar nick = $('.nick_input').val();\r\n");
      out.write("\t\tvar pw = $('.pw_input').val();\r\n");
      out.write("\t\tvar pwck = $('.pwck_input').val();\r\n");
      out.write("\t\tvar pattern1 = /[0-9]/;\r\n");
      out.write("\t\tvar pattern2 = /[a-zA-Z]/;\r\n");
      out.write("\t\tvar pattern3 = /[~!@#$%^&*><]/;\r\n");
      out.write("\t\tvar warnMsg = $(\".pw_input_box_warn\");\r\n");
      out.write("\t\tvar name = $('.user_input').val();\r\n");
      out.write("\t\tvar mail = $('.mail_input').val();\r\n");
      out.write("\t\tvar addr = $('.address_input_3').val();\r\n");
      out.write("        //$(\"#join_form\").attr(\"action\", \"/member/join\");\r\n");
      out.write("        //$(\"#join_form\").submit();\r\n");
      out.write("        \r\n");
      out.write("\t\t//아이디 유효성 검사\r\n");
      out.write("\t\tif(id == \"\"){\r\n");
      out.write("\t\t\t$('.final_id_ck').css('display','block');\r\n");
      out.write("\t\t\tidCheck = false;\r\n");
      out.write("\t\t}else{\r\n");
      out.write("\t\t\t$('.final_id_ck').css('display', 'none');\r\n");
      out.write("\t\t\tidCheck = true;\r\n");
      out.write("\t\t}\r\n");
      out.write("\t\t\r\n");
      out.write("\t\t//닉네임 유효성 검사\r\n");
      out.write("\t\tif(nick == \"\"){\r\n");
      out.write("\t\t\t$('.final_nick_ck').css('display','block');\r\n");
      out.write("\t\t\tnickCheck = false;\r\n");
      out.write("\t\t}else{\r\n");
      out.write("\t\t\t$('.final_nick_ck').css('display', 'none');\r\n");
      out.write("\t\t\tnickCheck = true;\r\n");
      out.write("\t\t}\r\n");
      out.write("\t\t\r\n");
      out.write("\t\t//비밀번호 유효성 검사\r\n");
      out.write("\t\tif(pw ==\"\"){\r\n");
      out.write("\t\t\t$('.final_pw_ck').css('display','block');\r\n");
      out.write("\t\t\tpwCheck = false;\r\n");
      out.write("\t\t}\r\n");
      out.write("\t\telse if(!pattern1.test(pw)||!pattern2.test(pw)||!pattern3.test(pw)||pw.length<8||pw.length>50){\r\n");
      out.write("\t\t\twarnMsg.html(\" 조건 불충분\");\r\n");
      out.write("\t\t\tpwCheck = false;\r\n");
      out.write("\t\t}\r\n");
      out.write("\t\telse{\r\n");
      out.write("\t\t\t$('.final_pw_ck').css('display','none');\r\n");
      out.write("\t\t\tpwCheck = true;\r\n");
      out.write("\t\t}\r\n");
      out.write("\t\t\r\n");
      out.write("\t\t//비밀번호 확인 유효성 검사\r\n");
      out.write("\t\tif(pwck ==\"\"){\r\n");
      out.write("\t\t\t$('.final_pwck_ck').css('display','block');\r\n");
      out.write("\t\t\tpwckCheck = false;\r\n");
      out.write("\t\t}else{\r\n");
      out.write("\t\t\t$('.final_pwck_ck').css('display', 'none');\r\n");
      out.write("\t\t\tpwckCheck = true;\r\n");
      out.write("\t\t}\r\n");
      out.write("\t\t\r\n");
      out.write("\t\t//이름 확인 유효성 검사\r\n");
      out.write("        if(name == \"\"){\r\n");
      out.write("            $('.final_name_ck').css('display','block');\r\n");
      out.write("            nameCheck = false;\r\n");
      out.write("        }else{\r\n");
      out.write("            $('.final_name_ck').css('display', 'none');\r\n");
      out.write("            nameCheck = true;\r\n");
      out.write("        }\r\n");
      out.write("\t\t\r\n");
      out.write("\t\t//이메일 유효성 검사\r\n");
      out.write("        if(mail == \"\"){\r\n");
      out.write("            $('.final_mail_ck').css('display','block');\r\n");
      out.write("            mailCheck = false;\r\n");
      out.write("        }else{\r\n");
      out.write("            $('.final_mail_ck').css('display', 'none');\r\n");
      out.write("            mailCheck = true;\r\n");
      out.write("        }\r\n");
      out.write("\t\t\r\n");
      out.write("\t\t//주소 유효성 검사\r\n");
      out.write("        if(addr == \"\"){\r\n");
      out.write("            $('.final_addr_ck').css('display','block');\r\n");
      out.write("            addressCheck = false;\r\n");
      out.write("        }else{\r\n");
      out.write("            $('.final_addr_ck').css('display', 'none');\r\n");
      out.write("            addressCheck = true;\r\n");
      out.write("        }\r\n");
      out.write("\t\t\r\n");
      out.write("\t\t//최종 유효성 검사\r\n");
      out.write("        if(idCheck && idckCheck && nickckCheck && pwCheck && pwckCheck && pwckcorCheck && nameCheck && mailCheck && mailckCheck && mailnumCheck && addressCheck){\r\n");
      out.write("            $(\"#join_form\").attr(\"action\", \"/member/join\");\r\n");
      out.write("            $(\"#join_form\").submit(); \r\n");
      out.write("            alert(\"회원가입이 완료되었습니다.\");\r\n");
      out.write("        }\r\n");
      out.write("        else{\r\n");
      out.write("        \talert(\"입력 정보를 다시 확인해주세요.\");\r\n");
      out.write("        \treturn false;\r\n");
      out.write("        }\r\n");
      out.write("\t});\r\n");
      out.write("});\r\n");
      out.write("\r\n");
      out.write("/*\r\n");
      out.write(" * 아이디 영문 + 숫자만 가능하게\r\n");
      out.write(" */\r\n");
      out.write("$('.id_input').keyup(function(event){\r\n");
      out.write("\tif(!(event.keyCode >= 37 && event.keyCode<=40)){\r\n");
      out.write("\t\tvar inputVal = $(this).val();\r\n");
      out.write("\t\t$(this).val(inputVal.replace(/[^a-z0-9]/gi,''));\r\n");
      out.write("\t}\r\n");
      out.write("})\r\n");
      out.write("\r\n");
      out.write("/*\r\n");
      out.write(" * 아이디 중복성 검사\r\n");
      out.write(" */\r\n");
      out.write("$('.id_input').on(\"propertychange change keyup paste input\", function(){\r\n");
      out.write("\tvar memberId = $('.id_input').val(); // .id_input에 입력되는 값을 memberId에 저장\r\n");
      out.write("\tvar data = {memberId : memberId} // 컨트롤에 넘길 데이터 이름 : 데이터(.id_input에 입력된 값)\r\n");
      out.write("\t\r\n");
      out.write("\t$.ajax({\r\n");
      out.write("\t\ttype: \"post\",\r\n");
      out.write("\t\turl: \"/member/memberIdChk\",\r\n");
      out.write("\t\tdata: data,\r\n");
      out.write("\t\tsuccess: function(result){\r\n");
      out.write("\t\t\tif(result != 'fail'){\r\n");
      out.write("\t\t\t\t$('.id_input_re_1').css(\"display\",\"inline-block\");\r\n");
      out.write("\t\t\t\t$('.id_input_re_2').css(\"display\",\"none\");\r\n");
      out.write("\t\t\t\tidckCheck = true;\r\n");
      out.write("\t\t\t} else{\r\n");
      out.write("\t\t\t\t$('.id_input_re_2').css(\"display\",\"inline-block\");\r\n");
      out.write("\t\t\t\t$('.id_input_re_1').css(\"display\",\"none\");\r\n");
      out.write("\t\t\t\tidckCheck = false;\r\n");
      out.write("\t\t\t}\r\n");
      out.write("\t\t} //success 종료\r\n");
      out.write("\t}); //ajax 종료\r\n");
      out.write("}); //function 종료\r\n");
      out.write("\r\n");
      out.write("\r\n");
      out.write("/*\r\n");
      out.write(" * 닉네임 중복성 검사\r\n");
      out.write(" */\r\n");
      out.write("$('.nick_input').on(\"propertychange change keyup paste input\", function(){\r\n");
      out.write("\tvar memberNick = $('.nick_input').val(); // .id_input에 입력되는 값을 memberId에 저장\r\n");
      out.write("\tvar data = {memberNick : memberNick} // 컨트롤에 넘길 데이터 이름 : 데이터(.id_input에 입력된 값)\r\n");
      out.write("\t\r\n");
      out.write("\t$.ajax({\r\n");
      out.write("\t\ttype: \"post\",\r\n");
      out.write("\t\turl: \"/member/memberNickChk\",\r\n");
      out.write("\t\tdata: data,\r\n");
      out.write("\t\tsuccess: function(result){\r\n");
      out.write("\t\t\tif(result != 'fail'){\r\n");
      out.write("\t\t\t\t$('.nick_input_re_1').css(\"display\",\"inline-block\");\r\n");
      out.write("\t\t\t\t$('.nick_input_re_2').css(\"display\",\"none\");\r\n");
      out.write("\t\t\t\tnickckCheck = true;\r\n");
      out.write("\t\t\t} else{\r\n");
      out.write("\t\t\t\t$('.nick_input_re_2').css(\"display\",\"inline-block\");\r\n");
      out.write("\t\t\t\t$('.nick_input_re_1').css(\"display\",\"none\");\r\n");
      out.write("\t\t\t\tnickckCheck = false;\r\n");
      out.write("\t\t\t}\r\n");
      out.write("\t\t} //success 종료\r\n");
      out.write("\t}); //ajax 종료\r\n");
      out.write("}); //function 종료\r\n");
      out.write("\r\n");
      out.write("\r\n");
      out.write("/*\r\n");
      out.write(" * 이름 한글만 가능하게\r\n");
      out.write(" */\r\n");
      out.write(" $('.user_input').keyup(function(event){\r\n");
      out.write("\t if(!(event.keyCode >= 37 && event.keyCode<=40)){\r\n");
      out.write("\t\t\tvar inputVal = $(this).val();\r\n");
      out.write("\t\t\t$(this).val(inputVal.replace(/[a-z0-9]/gi,''));\r\n");
      out.write("\t\t}\r\n");
      out.write("\t})\r\n");
      out.write(" \r\n");
      out.write("/*\r\n");
      out.write(" * 인증번호 이메일 전송\r\n");
      out.write(" */\r\n");
      out.write("$(\".mail_check_button\").click(function(){ //.mail_check_button태그를 갖는 것을 .click 클릭하면 function() 함수 실행\r\n");
      out.write("\tvar name = $(\".user_input\").val();\r\n");
      out.write("\tvar email = $(\".mail_input\").val(); //사용자가 입력한 이메일\r\n");
      out.write("\tvar checkBox = $(\".mail_check_input\"); //인증번호 입력란\r\n");
      out.write("\tvar boxWrap = $(\".mail_check_input_box\"); //인증번호 입력란 박스\r\n");
      out.write("\tvar warnMsg = $(\".mail_input_box_warn\"); //이메일 입력 경고글\r\n");
      out.write("    //이메일 형식 유효성 검사\r\n");
      out.write("    if(mailFormCheck(email)){ //올바른 이메일 형식이면 mailFormCheck()가 true를 반환\r\n");
      out.write("    \talert(\"이메일이 전송되었습니다.\");\r\n");
      out.write("        warnMsg.html(\"<h3>이메일이 전송 되었습니다. 이메일을 확인해주세요.</h3>\");\r\n");
      out.write("        warnMsg.css(\"display\", \"inline-block\");\r\n");
      out.write("    } else {\r\n");
      out.write("        warnMsg.html(\"이메일 형식이 올바르지 않습니다.\");\r\n");
      out.write("        warnMsg.css(\"display\", \"inline-block\");\r\n");
      out.write("        return false; //다음 ajax를 실행하지 못하도록 메소드에서 벗어나기 위해\r\n");
      out.write("    }    \r\n");
      out.write("\t$.ajax({//이메일 인증번호 전송을 요청하는 ajax\r\n");
      out.write("\t\ttype:\"GET\", //url을 통해 데이터를 보낼 수 있도록 GET 방식으로 요청 , url명은 Controller의 매핑에 맞게 mailCheck로 설정\r\n");
      out.write("\t\turl:\"mailCheck?email=\" + email,  //? 쿼리 요청 시 입력된 email을 집어넣음\r\n");
      out.write("\t\tsuccess:function(data){// ajax 성공 시 해당 함수 실행\r\n");
      out.write("\t\t\tcheckBox.attr(\"disabled\", false); //입력란에 입력가능하도록 속성을 변경 disabled -> false\r\n");
      out.write("\t\t\tboxWrap.attr(\"id\", \"mail_check_input_box_true\"); //입력란의 색상이 변경되도록 회색-> 흰색이 되도록\r\n");
      out.write("\t\t\tcode = data;\r\n");
      out.write("\t\t}\r\n");
      out.write("\t});\r\n");
      out.write("});\r\n");
      out.write("\r\n");
      out.write("/*\r\n");
      out.write(" * 인증번호 비교\r\n");
      out.write(" */\r\n");
      out.write("$(\".mail_check_input\").blur(function(){\r\n");
      out.write("\tvar inputCode = $(\".mail_check_input\").val();//사용자 입력 코드\r\n");
      out.write("\tvar checkResult = $(\"#mail_check_input_box_warn\"); //비교 결과 span태그의 일치, 불일치\r\n");
      out.write("\t\r\n");
      out.write("    if(inputCode == code){                            // 일치할 경우\r\n");
      out.write("        checkResult.html(\"인증번호가 일치합니다.\");\r\n");
      out.write("        checkResult.attr(\"class\", \"correct\");\r\n");
      out.write("        mailnumCheck = true;\r\n");
      out.write("    } else {                                            // 일치하지 않을 경우\r\n");
      out.write("        checkResult.html(\"인증번호를 다시 확인해주세요.\");\r\n");
      out.write("        checkResult.attr(\"class\", \"incorrect\");\r\n");
      out.write("        mailnumCheck = false;\r\n");
      out.write("    }\r\n");
      out.write("});\r\n");
      out.write("\r\n");
      out.write("/*\r\n");
      out.write(" * 이메일 중복성 검사\r\n");
      out.write(" */\r\n");
      out.write("$('.mail_input').on(\"propertychange change keyup paste input\", function(){\r\n");
      out.write("\tvar memberMail = $('.mail_input').val(); //이메일 입력 값 memberMail에 저장\r\n");
      out.write("\tvar data = {memberMail : memberMail} //컨트롤러에 넘길 데이터이름: 넘길데이터\r\n");
      out.write("\t$.ajax({\r\n");
      out.write("\t\ttype: \"post\",\r\n");
      out.write("\t\turl: \"/member/memberMailChk\",\r\n");
      out.write("\t\tdata: data,\r\n");
      out.write("\t\tsuccess: function(result) {\r\n");
      out.write("\t\t\tif(result != 'fail'){\r\n");
      out.write("\t\t\t\t$('.mail_input_re_1').css(\"display\",\"inline-block\");\r\n");
      out.write("\t\t\t\t$('.mail_input_re_2').css(\"display\",\"none\");\r\n");
      out.write("\t\t\t\tmailckCheck = true;\r\n");
      out.write("\t\t\t} else{\r\n");
      out.write("\t\t\t\t$('.mail_input_re_2').css(\"display\",\"inline-block\");\r\n");
      out.write("\t\t\t\t$('.mail_input_re_1').css(\"display\",\"none\");\r\n");
      out.write("\t\t\t\tmailckCheck = false;\r\n");
      out.write("\t\t\t}\r\n");
      out.write("\t\t}\r\n");
      out.write("\t});\r\n");
      out.write("});\r\n");
      out.write("\r\n");
      out.write("/*\r\n");
      out.write(" * 다음 주소 연동 (주소 검색 기능 메소드)\r\n");
      out.write(" */\r\n");
      out.write(" function execution_daum_address(){\r\n");
      out.write("\t//다음 주소 팝업창 띄우기\r\n");
      out.write("\tnew daum.Postcode({\r\n");
      out.write("\t\toncomplete: function(data){\r\n");
      out.write("\t\t\t// 각 주소의 노출 규칙에 따라 주소를 조합한다.\r\n");
      out.write("            // 내려오는 변수가 값이 없는 경우엔 공백('')값을 가지므로, 이를 참고하여 분기 한다.\r\n");
      out.write("            var addr = ''; // 주소 변수\r\n");
      out.write("            var extraAddr = ''; // 참고항목 변수\r\n");
      out.write("\r\n");
      out.write("            //사용자가 선택한 주소 타입에 따라 해당 주소 값을 가져온다.\r\n");
      out.write("            if (data.userSelectedType === 'R') { // 사용자가 도로명 주소를 선택했을 경우\r\n");
      out.write("                addr = data.roadAddress;\r\n");
      out.write("            } else { // 사용자가 지번 주소를 선택했을 경우(J)\r\n");
      out.write("                addr = data.jibunAddress;\r\n");
      out.write("            }\r\n");
      out.write("\r\n");
      out.write("            // 사용자가 선택한 주소가 도로명 타입일때 참고항목을 조합한다.\r\n");
      out.write("            if(data.userSelectedType === 'R'){\r\n");
      out.write("                // 법정동명이 있을 경우 추가한다. (법정리는 제외)\r\n");
      out.write("                // 법정동의 경우 마지막 문자가 \"동/로/가\"로 끝난다.\r\n");
      out.write("                if(data.bname !== '' && /[동|로|가]$/g.test(data.bname)){\r\n");
      out.write("                    extraAddr += data.bname;\r\n");
      out.write("                }\r\n");
      out.write("                // 건물명이 있고, 공동주택일 경우 추가한다.\r\n");
      out.write("                if(data.buildingName !== '' && data.apartment === 'Y'){\r\n");
      out.write("                    extraAddr += (extraAddr !== '' ? ', ' + data.buildingName : data.buildingName);\r\n");
      out.write("                }\r\n");
      out.write("                // 표시할 참고항목이 있을 경우, 괄호까지 추가한 최종 문자열을 만든다.\r\n");
      out.write("                if(extraAddr !== ''){\r\n");
      out.write("                    extraAddr = ' (' + extraAddr + ')';\r\n");
      out.write("                }\r\n");
      out.write("                //주소 변수 문자열과 참고항목 문자열 합치기\r\n");
      out.write("                addr += extraAddr;\r\n");
      out.write("            \r\n");
      out.write("            } else {\r\n");
      out.write("                addr += ' ';\r\n");
      out.write("            }\r\n");
      out.write("\r\n");
      out.write("            // 우편번호와 주소 정보를 해당 필드에 넣는다.\r\n");
      out.write("            $(\".address_input_1\").val(data.zonecode);\r\n");
      out.write("            $(\".address_input_2\").val(addr);\r\n");
      out.write("            // 커서를 상세주소 필드로 이동한다.\r\n");
      out.write("            $(\".address_input_3\").attr(\"readonly\",false);\r\n");
      out.write("            $(\".address_input_3\").focus();\r\n");
      out.write("\t\t}\r\n");
      out.write("\t}).open();\r\n");
      out.write("}\r\n");
      out.write("\r\n");
      out.write(" \r\n");
      out.write("/*\r\n");
      out.write(" * 비밀번호 확인 일치 유효성 검사 \r\n");
      out.write(" */\r\n");
      out.write(" $('.pwck_input').on(\"propertychange change keyup paste input\", function(){\r\n");
      out.write("\t \r\n");
      out.write("\t    var pw = $('.pw_input').val();\r\n");
      out.write("\t    var pwck = $('.pwck_input').val();\r\n");
      out.write("\t    $('.final_pwck_ck').css('display', 'none');\r\n");
      out.write("\t    if(pw == pwck){\r\n");
      out.write("\t        $('.pwck_input_re_1').css('display','block');\r\n");
      out.write("\t        $('.pwck_input_re_2').css('display','none');\r\n");
      out.write("\t        pwckcorCheck = true;\r\n");
      out.write("\t    }else{\r\n");
      out.write("\t        $('.pwck_input_re_1').css('display','none');\r\n");
      out.write("\t        $('.pwck_input_re_2').css('display','block');\r\n");
      out.write("\t        pwckcorCheck = false;\r\n");
      out.write("\t    }\r\n");
      out.write("\t});\r\n");
      out.write("\r\n");
      out.write("/*\r\n");
      out.write(" * 입력 이메일 형식 유효성 검사\r\n");
      out.write(" */\r\n");
      out.write(" function mailFormCheck(email) {\r\n");
      out.write("\t var form = /^([\\w-]+(?:\\.[\\w-]+)*)@((?:[\\w-]+\\.)*\\w[\\w-]{0,66})\\.([a-z]{2,6}(?:\\.[a-z]{2})?)$/i; \r\n");
      out.write("\t return form.test(email);//매개변수 email이 form에 저장된 부합할 경우 true, 아닐경우 false반환\r\n");
      out.write("}\r\n");
      out.write("</script>\r\n");
      out.write("\r\n");
      out.write("</body>\r\n");
      out.write("</html>");
    } catch (java.lang.Throwable t) {
      if (!(t instanceof javax.servlet.jsp.SkipPageException)){
        out = _jspx_out;
        if (out != null && out.getBufferSize() != 0)
          try {
            if (response.isCommitted()) {
              out.flush();
            } else {
              out.clearBuffer();
            }
          } catch (java.io.IOException e) {}
        if (_jspx_page_context != null) _jspx_page_context.handlePageException(t);
        else throw new ServletException(t);
      }
    } finally {
      _jspxFactory.releasePageContext(_jspx_page_context);
    }
  }
}
